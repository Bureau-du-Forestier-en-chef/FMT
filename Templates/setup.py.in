from setuptools import setup, find_packages
from glob import glob
import os

try:
    from wheel.bdist_wheel import bdist_wheel as _bdist_wheel
    class bdist_wheel(_bdist_wheel):
        def finalize_options(self):
            _bdist_wheel.finalize_options(self)
            self.root_is_pure = False
except ImportError:
    bdist_wheel = None

def generate_YieldPredModels(base_dir="YieldPredModels"):
    base = Path(__file__).parent / base_dir
    patterns = []
    for path in base.glob("**"):
        if path.is_dir() and any(path.iterdir()):
            rel = path.relative_to(Path(__file__).parent)
            patterns.append(rel.as_posix() + "/*")  
    
    return patterns

setup(
    name="FMT",
    version="@PROJECT_VERSION@",
    description="Forest Management Tool",
    long_description="FMT is a C++ library made to interpret forest planning models based on Woodstock files formulation. FMT can be used through Python, Cran-R or directly from C++. FMT's generic approach to forest planning gives the opportunity to the user to manipulate forest planning models and generate forest planning solutions. The objective behind this project is to bring all forest planning models types onto the same generic library to help the community to develop new approaches to forest planning problems or improve the one that have been there for years.",
    url="https://github.com/Bureau-du-Forestier-en-chef/FMT",
    author="Guillaume Cyr",
    author_email="Guillaume Cyr <Guillaume.Cyr@fec.gouv.qc.ca>",
    install_requires=[],
    extras_require={},
    include_package_data=True,
    packages=["FMT"],
    package_dir={"FMT": ""},
    package_data={"FMT": [
        "*.dll", 
        "*.lib", 
        "*.exp", 
        "*.pyd", 
        "GDAL_DATA/*.*", 
        "GDAL_DATA/html/*.*",
        "LICENSES/*",
        "proj/*",
        ] + generate_YieldPredModels()
        },
    entry_points={},
    python_requires="==@PYTHONMAJOR@.@PYTHONMINOR@.*",
    cmdclass={'bdist_wheel': bdist_wheel}
)
